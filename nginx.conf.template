events {
    worker_connections 1024; # Default
}

http {
    # Zones & rate limits
    limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=website_limit:10m rate=20r/s;
    
    # Enable gzip for website assets
    gzip on;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_min_length 256;
    

    # MANGOPOST API (:80)
    server {
        listen 80;
        listen [::]:80;
        server_name ${MANGOPOST_API_DOMAIN};

        # ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # NEOCALL (:80)
    server {
        listen 80;
        listen [::]:80;
        server_name neocall.ai;

        # ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # MANGOPOST API (:443)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;

        server_name ${MANGOPOST_API_DOMAIN};

        ssl_certificate /etc/letsencrypt/live/neocall.ai/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/neocall.ai/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        location /api/events {
            limit_req zone=webhook_limit burst=10 nodelay;
            proxy_pass http://mangopost_api:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth {
            allow ${IP}; # server IP for testing
            allow 127.0.0.1;     # localhost for testing
            deny all;            # Block others
            proxy_pass http://mangopost_api:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/callback {
            allow ${IP}; # server IP for testing
            allow 127.0.0.1;      # localhost for testing
            deny all;             # Block others
            proxy_pass http://mangopost_api:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            return 404;
        }
    }

    # NEOCALL (:443)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name neocall.ai;

        ssl_certificate /etc/letsencrypt/live/neocall.ai/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/neocall.ai/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        location = / {
            return 301 /de;
        }
        
        # Exclude static assets from rate limiting
        location ~* \.(?:json|png|jpg|svg|css|js|webp)$ {
            access_log off;
            expires 30d;
            add_header Cache-Control "public";
            proxy_pass http://neocall_front:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            limit_req zone=website_limit burst=30 nodelay;  # Apply rate limiting
            proxy_pass http://neocall_front:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/ {
            limit_req zone=website_limit burst=20 nodelay;
            proxy_pass http://backend:3001/api/; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}